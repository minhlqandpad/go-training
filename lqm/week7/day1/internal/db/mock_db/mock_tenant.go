// Code generated by MockGen. DO NOT EDIT.
// Source: internal/db/tenant.go

// Package mock_db is a generated GoMock package.
package mock_db

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/tuannguyenandpadcojp/go-training/lqm/week7/day1/internal/domain"
)

// MockTenantDB is a mock of TenantDB interface.
type MockTenantDB struct {
	ctrl     *gomock.Controller
	recorder *MockTenantDBMockRecorder
}

// MockTenantDBMockRecorder is the mock recorder for MockTenantDB.
type MockTenantDBMockRecorder struct {
	mock *MockTenantDB
}

// NewMockTenantDB creates a new mock instance.
func NewMockTenantDB(ctrl *gomock.Controller) *MockTenantDB {
	mock := &MockTenantDB{ctrl: ctrl}
	mock.recorder = &MockTenantDBMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTenantDB) EXPECT() *MockTenantDBMockRecorder {
	return m.recorder
}

// GetTenantById mocks base method.
func (m *MockTenantDB) GetTenantById(name string) (*domain.Tenant, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTenantById", name)
	ret0, _ := ret[0].(*domain.Tenant)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTenantById indicates an expected call of GetTenantById.
func (mr *MockTenantDBMockRecorder) GetTenantById(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTenantById", reflect.TypeOf((*MockTenantDB)(nil).GetTenantById), name)
}
