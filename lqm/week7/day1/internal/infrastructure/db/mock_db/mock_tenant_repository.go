// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/repository/tenant.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/tuannguyenandpadcojp/go-training/lqm/week7/day1/internal/domain"
)

// MockTenantRepository is a mock of TenantRepository interface.
type MockTenantRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTenantRepositoryMockRecorder
}

// MockTenantRepositoryMockRecorder is the mock recorder for MockTenantRepository.
type MockTenantRepositoryMockRecorder struct {
	mock *MockTenantRepository
}

// NewMockTenantRepository creates a new mock instance.
func NewMockTenantRepository(ctrl *gomock.Controller) *MockTenantRepository {
	mock := &MockTenantRepository{ctrl: ctrl}
	mock.recorder = &MockTenantRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTenantRepository) EXPECT() *MockTenantRepositoryMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockTenantRepository) Get(ctx context.Context, id string) (*domain.Tenant, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, id)
	ret0, _ := ret[0].(*domain.Tenant)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockTenantRepositoryMockRecorder) Get(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockTenantRepository)(nil).Get), ctx, id)
}
